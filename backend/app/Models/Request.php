<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasOne;
use Illuminate\Http\UploadedFile;

/**
 * Class Request
 * @package App\Models
 *
 * @property int $id
 * @property string $title
 * @property string $text_id
 * @property string $status_id
 */
class Request extends Model
{
    use HasFactory;

    const NEW = 1;
    const IN_WORK = 2;
    const DONE = 3;
    const CANCELED = 4;


    protected $fillable = [
        'title',
        'status_id',
        'text_id',
    ];

    public function status(): HasOne
    {
        return $this->hasOne(RequestStatus::class);
    }
    public function text(): HasOne
    {
        return $this->hasOne(RequestText::class);
    }
    public function image()
    {
        return $this->hasMany(RequestImage::class);
    }

    public function addImages(array $images){
        foreach ($images as $image){
            $this->addImage($image);
        }
    }

    public function addImage(UploadedFile $image){
        $file = $image;
        $filename= date('YmdHi').$file->getClientOriginalName();
        $file->move(public_path("image/requests/$this->id"), $filename);
        $this->image()->insert([
            'request_id' => $this->id,
            'filepath' => "image/requests/$this->id/$filename",
        ]);
    }

    public function save(array $options = [])
    {
        $this->title = $options['title'] ?? null;
        $this->status_id = $options['status_id'] ?? self::NEW;

        if(isset($options['text'])){
            $text = new RequestText(['text' => $options['text']]);
            $text->save();
            $this->text_id = $text->id;
        }

        return parent::save($options); // TODO: Change the autogenerated stub
    }

    public static function create($attributes){


        dd($attributes);
    }
}
